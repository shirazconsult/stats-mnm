<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
			http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
			http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">
    
    <!-- batch jobs -->
	<!-- ===========-->
	<batch:job id="hourlyJob" restartable="true" incrementer="incrementer">
    	<batch:step id="hstep">
        	<batch:tasklet transaction-manager="txManager">
            	<batch:chunk reader="statsViewHourlyReader" processor="statsViewHourlyProcessor" writer="statsViewHourlyWriter" 
                	   commit-interval="100"/>
        	</batch:tasklet>
    	</batch:step>
    	<batch:listeners>
    		<batch:listener ref="statsViewJobListener"/>
    	</batch:listeners>
	</batch:job>

	<batch:job id="dailyJob" restartable="true" incrementer="incrementer">
    	<batch:step id="dstep">
        	<batch:tasklet transaction-manager="txManager">
            	<batch:chunk reader="statsViewDailyReader" processor="statsViewDailyProcessor" writer="statsViewDailyWriter" 
                	   commit-interval="100"/>
        	</batch:tasklet>
    	</batch:step>
    	<batch:listeners>
    		<batch:listener ref="statsViewJobListener"/>
    	</batch:listeners>
	</batch:job>
	
	<!-- cleanup jobs/tasks -->
	<!-- ================== -->
	<bean id="cleanupTask" class="com.nordija.statistic.mnm.stats.batch.CleanupTask"/>
	<batch:job id="cleanupHourlyJob" restartable="true" incrementer="incrementer">
    	<batch:step id="cthStep">
       		<batch:tasklet ref="cleanupTask" transaction-manager="txManager" />
    	</batch:step>
	</batch:job>
	<batch:job id="cleanupDailyJob" restartable="true" incrementer="incrementer">
    	<batch:step id="cdtStep">
       		<batch:tasklet ref="cleanupTask" transaction-manager="txManager"/>
    	</batch:step>
	</batch:job>
	<batch:job id="cleanupViewJob" restartable="true" incrementer="incrementer">
    	<batch:step id="cvtStep">
       		<batch:tasklet ref="cleanupTask" transaction-manager="txManager"/>
    	</batch:step>
	</batch:job>
	
	<!-- processors -->
	<!-- ========== -->
	<bean id="statsViewHourlyProcessor" class="com.nordija.statistic.mnm.stats.batch.StatsViewItemProcessor">
		<property name="name" value="Hourly processor"/>
		<property name="accumulationUnit" value="HOURS"/>
	</bean>

	<bean id="statsViewDailyProcessor" class="com.nordija.statistic.mnm.stats.batch.StatsViewItemProcessor">
		<property name="name" value="Daily processor"/>
		<property name="accumulationUnit" value="DAYS"/>
	</bean>
	
	<!-- readers -->
	<!-- ======= -->
	<bean id="statsViewHourlyReader" class="com.nordija.statistic.mnm.stats.batch.StatsViewItemReader">
    	<property name="dataSource" ref="dataSource"/>
    	<property name="sql" value="select * from stats_view"/> <!-- this is a dummy sql. will be overrided -->
    	<property name="rowMapper" ref="statsViewRowListMapper"/>
	</bean>

	<bean id="statsViewDailyReader" class="com.nordija.statistic.mnm.stats.batch.StatsViewItemReader">
    	<property name="dataSource" ref="dataSource"/>
    	<property name="sql" value="select * from stats_view"/> <!-- this is a dummy sql. will be overrided -->
    	<property name="rowMapper" ref="statsViewRowListMapper"/>
	</bean>
	
	<!-- writers -->
	<!-- ======= -->
	<bean id="statsViewHourlyWriter"
		class="com.nordija.statistic.mnm.stats.batch.StatsViewItemWriter">
		<property name="batchItemWriter">
			<bean class="org.springframework.batch.item.database.JdbcBatchItemWriter">
				<property name="assertUpdates" value="true" />
				<property name="itemPreparedStatementSetter" ref="statsViewPreparedStatementSetter"/>
				<property name="sql"
					value="insert into stats_view_hourly (type, name, title, viewers, duration, fromTS, toTS) 
							values(?, ?, ?, ?, ?, ?, ?)" />
				<property name="dataSource" ref="dataSource" />
			</bean>
		</property>
	</bean>

	<bean id="statsViewDailyWriter"
		class="com.nordija.statistic.mnm.stats.batch.StatsViewItemWriter">
		<property name="batchItemWriter">
			<bean class="org.springframework.batch.item.database.JdbcBatchItemWriter">
				<property name="assertUpdates" value="true" />
				<property name="itemPreparedStatementSetter" ref="statsViewPreparedStatementSetter"/>
				<property name="sql"
					value="insert into stats_view_daily (type, name, title, viewers, duration, fromTS, toTS) 
							values(?, ?, ?, ?, ?, ?, ?)" />
				<property name="dataSource" ref="dataSource" />
			</bean>
		</property>
	</bean>

	<!-- schedulers & launchers -->
	<!-- ====================== -->
	<bean id="hourlyScheduledJobLauncher" class="com.nordija.statistic.mnm.stats.batch.ScheduledJobLauncherImpl">
		<property name="job" ref="hourlyJob"/>
		<property name="scheduleTimeUnit" value="HOURS"/>
	</bean>
	<bean id="dailyScheduledJobLauncher" class="com.nordija.statistic.mnm.stats.batch.ScheduledJobLauncherImpl">
		<property name="job" ref="dailyJob"/>
		<property name="scheduleTimeUnit" value="DAYS"/>
	</bean>
	<bean id="cleanupViewJobLauncher" class="com.nordija.statistic.mnm.stats.batch.CleanupJobLauncher">
		<property name="job" ref="cleanupViewJob"/>
		<property name="daysToLive" value="1" />
		<property name="table" value="stats_view"/>
	</bean>
	<bean id="cleanupHourlyJobLauncher" class="com.nordija.statistic.mnm.stats.batch.CleanupJobLauncher">
		<property name="job" ref="cleanupHourlyJob"/>
		<property name="daysToLive" value="2" />
		<property name="table" value="stats_view_hourly"/>
	</bean>
	<bean id="cleanupDailyJobLauncher" class="com.nordija.statistic.mnm.stats.batch.CleanupJobLauncher">
		<property name="job" ref="cleanupDailyJob"/>
		<property name="daysToLive" value="366" />
		<property name="table" value="stats_view_daily"/>
	</bean>
		
	<task:scheduler id="scheduler" />
	<task:scheduled-tasks scheduler="scheduler">
		<task:scheduled ref="hourlyScheduledJobLauncher"
        	          	method="launch"
        	          	cron="5 0 */1 * * *" /> <!-- every hour -->
        <task:scheduled ref="dailyScheduledJobLauncher" 
        				method="launch"
        	          	cron="0 5 0 * * *" /> <!-- 5 minutes after midnight -->
     	<task:scheduled ref="cleanupViewJobLauncher" 
     					method="launch" 
     					cron="0 45 0 * * *" /> <!-- 45 minutes after midnight -->
     	<task:scheduled ref="cleanupHourlyJobLauncher" 
     					method="launch" 
     					cron="0 50 0 * * *" /> <!-- 50 minutes after midnight -->
     	<task:scheduled ref="cleanupDailyJobLauncher" 
     					method="launch" 
     					cron="0 55 0 * * *" /> <!-- 55 minutes after midnight -->
	</task:scheduled-tasks>
	
	<!-- spring batch management beans -->
	<!-- ============================= -->
	<bean class="org.springframework.batch.core.scope.StepScope" />
	
	<batch:job-repository id="jobRepository"
    	data-source="dataSource"
    	transaction-manager="txManager"
    	isolation-level-for-create="SERIALIZABLE"
	/>
	
	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
    	<property name="jobRepository" ref="jobRepository" />
    	<property name="taskExecutor">
        	<bean class="org.springframework.core.task.SimpleAsyncTaskExecutor" />
    	</property>
	</bean>

	<bean id="jobExplorer" class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean" 
      	p:dataSource-ref="dataSource" />
      
	<bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry" />      
	
	<bean id="jobRegistryBeanPostProcessor" class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor">
    	<property name="jobRegistry" ref="jobRegistry"/>
	</bean>
      
	<bean id="jobOperator" class="org.springframework.batch.core.launch.support.SimpleJobOperator">
    	<property name="jobExplorer">
        	<bean class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean">
            	<property name="dataSource" ref="dataSource" />
        	</bean>
    	</property>
    	<property name="jobRepository" ref="jobRepository" />
    	<property name="jobRegistry" ref="jobRegistry" />
    	<property name="jobLauncher" ref="jobLauncher" />
	</bean>
    <bean id="incrementer" class="org.springframework.batch.core.launch.support.RunIdIncrementer"/>
	
</beans>

